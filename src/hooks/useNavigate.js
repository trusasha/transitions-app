import { useNavigation } from '@react-navigation/core';
import toRoute from 'helpers/toRoute';
import fetching from 'navigation/fetching';
import { useCallback } from 'react';

/**
 * Navigate to route with autogenerated key and route data fetch
 * @type {() => <T extends keyof import('navigation/linking').ParamsMap>
 * (name: string, params?: import('navigation/linking').ParamsMap[T]) => void}
 */
const useNavigate = () => {
  const { navigate: goTo } = useNavigation();
  const navigate = useCallback(
    (name, params = {}) => {
      if (fetching[name]) {
        fetching[name](params);
      }
      const route = toRoute(name, params);
      goTo(route);
    },
    [goTo],
  );
  return navigate;
};

export default useNavigate;
